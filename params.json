{"name":"Jstring","tagline":"A Node.js library, designed to simplify work with string validation and sanitization","body":"# jstring\r\n[![Build Status](https://travis-ci.org/imatveev/jstring.svg?branch=master)](https://travis-ci.org/imatveev/jstring)<br />\r\nA Node.js library, designed to simplify work with string validation and sanitization.\r\n## Installation\r\n    npm install jstring\r\n## When should I use jstring?\r\nYou need deal with string validation or sanitization in your Node.js project.\r\n## Installation\r\n    var jstring = require('jstring');\r\n## Usage\r\n\r\n### handleString(string, task)\r\nMain sanitization method, that takes string and task object, and return string after processing. \r\n(All jstring methods have public access, and You can use them direct. This method is developed for convenience).\r\n#### string\r\nSource string.\r\n#### task\r\nA object, that contains necessary functions and their parameters.\r\n    {function: [param],\r\n     function: [param]}\r\nCan be used with:\r\n    removeTags;\r\n    cut;\r\n#### return\r\nString processed.\r\n#### Example\r\n    jstring.handleString('Foo <Bar>Buzz', {cut: 6, removeTags:null});\r\n    //returns: Foo Bu\r\n    \r\n### removeTags(string[, except])\r\nRemoves all <*> and \\&lt;*\\&gt; elements of the string. \r\n#### string\r\nSource string.\r\n#### except\r\nA string, or array, that contains exclusion tag names. \r\n(Notice that closing tags is added automatically. For example if you pass 'div' as except - tag &lt;/div&gt; will not be deleted.)\r\n#### return\r\nString processed.\r\n#### Example\r\n    jstring.removeTags('Foo <Bar><Buzz>');\r\n    //returns: Foo \r\n    jstring.removeTags('Foo <Bar><Buzz>', Bar);\r\n    //returns: Foo <Bar>\r\n    jstring.removeTags('Foo &lt;Bar&gt;<Buzz>', Bar);\r\n    //returns: Foo \r\n    \r\n### cut(string, length)\r\nCuts the string from start to **length**. \r\n#### string\r\nSource string.\r\n#### length\r\nThe length by which the source string will be cut including.\r\n#### return\r\nString processed.\r\n#### Example\r\n    jstring.cut('Foo <Bar><Buzz>', 9);\r\n    //returns: Foo <Bar>\r\n\r\n### isAlpha(string)\r\nChecks if the source string contains only letters. \r\n#### string\r\nSource string.\r\n#### return\r\nBoolean is the source string contains only letters.\r\n#### Example\r\n    jstring.isAlpha('Foo <Bar><Buzz>');\r\n    //returns: false\r\n    jstring.isAlpha('Foo BarBuzz');\r\n    //returns: true\r\n        \r\n### isAlphanumeric(string)\r\nChecks if the source string contains only letters and numbers.\r\n#### string\r\nSource string.\r\n#### return\r\nBoolean is the source string contains only letters and numbers.\r\n#### Example\r\n    jstring.isAlphanumeric('Foo <Bar><Buzz> 67');\r\n    //returns: false\r\n    jstring.isAlphanumeric('Foo BarBuzz 67');\r\n    //returns: true","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}